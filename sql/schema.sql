-- Add new schema named "public"
CREATE SCHEMA IF NOT EXISTS "public";

-- Set comment to schema: "public"
COMMENT ON SCHEMA "public" IS 'standard public schema';

-- Create "organizers" table
CREATE TABLE
    "public"."organizers" (
        "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        PRIMARY KEY ("id")
    );

-- Create "candidates" table
CREATE TABLE
    "public"."candidates" (
        "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        PRIMARY KEY ("id")
    );

-- Create "complaints" table
CREATE TABLE
    "public"."complaints" (
        "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        PRIMARY KEY ("id")
    );

-- Create "elections" table
CREATE TABLE
    "public"."elections" (
        "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "title" character varying NOT NULL,
        "description" character varying NULL,
        "start_date" date NULL,
        "end_date" date NULL,
        "is_active" boolean NOT NULL DEFAULT true,
        PRIMARY KEY ("id")
    );

-- Create "fa_qs" table
CREATE TABLE
    "public"."fa_qs" (
        "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        PRIMARY KEY ("id")
    );

-- Create "feedbacks" table
CREATE TABLE
    "public"."feedbacks" (
        "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        PRIMARY KEY ("id")
    );

-- Create "comments" table
CREATE TABLE
    "public"."comments" (
        "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        PRIMARY KEY ("id")
    );

-- Create "votes" table
CREATE TABLE
    "public"."votes" (
        "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        PRIMARY KEY ("id")
    );

-- Create "tags" table
CREATE TABLE
    "public"."tags" (
        "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        PRIMARY KEY ("id")
    );

-- Create "settings" table
CREATE TABLE
    "public"."settings" (
        "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        PRIMARY KEY ("id")
    );

-- Create "results" table
CREATE TABLE
    "public"."results" (
        "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        PRIMARY KEY ("id")
    );

-- Create "users" table
CREATE TABLE
    "public"."users" (
        "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "email" character varying NOT NULL,
        "password" character varying NOT NULL,
        "is_active" boolean NOT NULL DEFAULT true,
        PRIMARY KEY ("id")
    );

-- Create index "user_email" to table: "users"
CREATE UNIQUE INDEX "user_email" ON "public"."users" ("email");

-- Create index "users_email_key" to table: "users"
CREATE UNIQUE INDEX "users_email_key" ON "public"."users" ("email");

-- Create "voters" table
CREATE TABLE
    "public"."voters" (
        "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        PRIMARY KEY ("id")
    );

-- Create "profiles" table
CREATE TABLE
    "public"."profiles" (
        "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "first_name" character varying NOT NULL,
        "last_name" character varying NOT NULL,
        "birthdate" timestamptz NULL,
        "user_profile" bigint NOT NULL,
        PRIMARY KEY ("id"),
        CONSTRAINT "profiles_users_profile" FOREIGN KEY ("user_profile") REFERENCES "public"."users" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION
    );

-- Create index "profiles_user_profile_key" to table: "profiles"
CREATE UNIQUE INDEX "profiles_user_profile_key" ON "public"."profiles" ("user_profile");