definitions:
  routes.Credentials:
    properties:
      email:
        description: |-
          Электронная почта пользователя
          required: true
        type: string
      password:
        description: |-
          Пароль пользователя
          required: true
        type: string
    type: object
  routes.SignupResponse:
    properties:
      id:
        description: ID вновь созданного пользователя
        type: integer
      message:
        description: Сообщение об успешном создании пользователя
        type: string
    type: object
  routes.TokenResponse:
    properties:
      token:
        description: JWT-токен
        type: string
    type: object
  services.ElectionCreate:
    properties:
      description:
        description: |-
          Description — описание выборов
          Это обязательное поле, максимальная длина 1000 символов.
        maxLength: 1000
        type: string
      title:
        description: |-
          Title — название выборов
          Это обязательное поле, минимальная длина 8 символов, максимальная длина 64 символа.
        maxLength: 64
        minLength: 8
        type: string
      user_id:
        description: |-
          UserID - идентификатор пользователя, которые создает выборы
          Это обязательное поле.
        type: integer
    type: object
info:
  contact: {}
paths:
  /elections:
    post:
      consumes:
      - application/json
      description: Создает новые выборы на основе данных, переданных в теле запроса.
      parameters:
      - description: Данные для создания выборов
        in: body
        name: election
        required: true
        schema:
          $ref: '#/definitions/services.ElectionCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Успешно создано, возвращает идентификатор созданных выборов
          schema:
            type: integer
        "400":
          description: Неверный формат запроса
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Создать выборы
      tags:
      - Выборы
  /login:
    post:
      consumes:
      - application/json
      description: Аутентификация пользователя и возврат JWT-токена
      parameters:
      - description: Учетные данные пользователя
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/routes.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.TokenResponse'
        "400":
          description: Неверный формат запроса
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Неверный пароль
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Вход пользователя
      tags:
      - Аутентификация
  /signup:
    post:
      consumes:
      - application/json
      description: Регистрация нового пользователя
      parameters:
      - description: Учетные данные пользователя
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/routes.Credentials'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/routes.SignupResponse'
        "400":
          description: Неверный формат запроса или ошибка при создании пользователя
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Регистрация пользователя
      tags:
      - Аутентификация
swagger: "2.0"
