definitions:
  ent.Profile:
    properties:
      birthdate:
        description: Birthdate holds the value of the "birthdate" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.ProfileEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ProfileQuery when eager-loading is set.
      first_name:
        description: FirstName holds the value of the "first_name" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
      last_name:
        description: LastName holds the value of the "last_name" field.
        type: string
    type: object
  ent.ProfileEdges:
    properties:
      user:
        allOf:
        - $ref: '#/definitions/ent.User'
        description: User holds the value of the user edge.
    type: object
  ent.User:
    properties:
      edges:
        allOf:
        - $ref: '#/definitions/ent.UserEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserQuery when eager-loading is set.
      email:
        description: Email holds the value of the "email" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
      is_active:
        description: IsActive holds the value of the "is_active" field.
        type: boolean
    type: object
  ent.UserEdges:
    properties:
      profile:
        allOf:
        - $ref: '#/definitions/ent.Profile'
        description: Profile holds the value of the profile edge.
    type: object
  routes.userInput:
    properties:
      email:
        type: string
      is_active:
        type: boolean
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Получает список всех зарегистрированных пользователей
      produces:
      - application/json
      responses:
        "200":
          description: Список пользователей
          schema:
            items:
              $ref: '#/definitions/ent.User'
            type: array
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить всех пользователей
      tags:
      - Пользователи
    post:
      consumes:
      - application/json
      description: Создает нового пользователя с указанными данными
      parameters:
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/routes.userInput'
      produces:
      - application/json
      responses:
        "200":
          description: ID созданного пользователя
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать пользователя
      tags:
      - Пользователи
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет существующего пользователя по уникальному идентификатору
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ID удаленного пользователя
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Неверный ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Пользователь не найден
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить пользователя
      tags:
      - Пользователи
    get:
      consumes:
      - application/json
      description: Получает пользователя по уникальному идентификатору
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Данные пользователя
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Неверный ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Пользователь не найден
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить пользователя
      tags:
      - Пользователи
    put:
      consumes:
      - application/json
      description: Обновляет данные существующего пользователя по уникальному идентификатору
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      - description: Обновленные данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/routes.userInput'
      produces:
      - application/json
      responses:
        "200":
          description: ID обновленного пользователя
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Пользователь не найден
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновить пользователя
      tags:
      - Пользователи
swagger: "2.0"
